{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RecetasService {\n  constructor() {\n    this.recetas = [];\n    this.selectedImage = null;\n  }\n  agregarReceta(receta, imagenFile) {\n    const recetas = this.obtenerRecetas();\n    if (imagenFile) {\n      const reader = new FileReader();\n      // Agregar una verificación para asegurarse de que event y event.target no sean nulos\n      reader.onload = event => {\n        if (event && event.target) {\n          const imagenBase64 = event.target.result;\n          // Agregar la cadena de la imagen a la receta\n          receta.imagen = imagenBase64;\n          recetas.push(receta);\n          localStorage.setItem('recetas', JSON.stringify(recetas));\n        }\n      };\n      // Leer la imagen y activar el evento onload\n      reader.readAsDataURL(imagenFile);\n    } else {\n      recetas.push(receta);\n      localStorage.setItem('recetas', JSON.stringify(recetas));\n    }\n  }\n  obtenerRecetas() {\n    const recetas = localStorage.getItem('recetas');\n    return recetas ? JSON.parse(recetas) : [];\n  }\n  static #_ = this.ɵfac = function RecetasService_Factory(t) {\n    return new (t || RecetasService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecetasService,\n    factory: RecetasService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RecetasService","constructor","recetas","selectedImage","agregarReceta","receta","imagenFile","obtenerRecetas","reader","FileReader","onload","event","target","imagenBase64","result","imagen","push","localStorage","setItem","JSON","stringify","readAsDataURL","getItem","parse","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\web\\Angular\\Practica\\src\\app\\recetas.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Receta } from 'src/app/pages/domain/receta';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecetasService {\n  private recetas: Receta[] = [];\n  \n  selectedImage: File | null = null;\n\n  agregarReceta(receta: Receta, imagenFile: File | null) {\n    const recetas = this.obtenerRecetas();\n\n    if (imagenFile) {\n      const reader = new FileReader();\n  \n      // Agregar una verificación para asegurarse de que event y event.target no sean nulos\n      reader.onload = (event) => {\n        if (event && event.target) {\n          const imagenBase64 = event.target.result as string;\n          \n          // Agregar la cadena de la imagen a la receta\n          receta.imagen = imagenBase64;\n    \n          recetas.push(receta);\n          localStorage.setItem('recetas', JSON.stringify(recetas));\n        }\n      };\n  \n      // Leer la imagen y activar el evento onload\n      reader.readAsDataURL(imagenFile);\n    } else {\n      recetas.push(receta);\n      localStorage.setItem('recetas', JSON.stringify(recetas));\n    }\n  }\n\n  obtenerRecetas() {\n    const recetas = localStorage.getItem('recetas');\n    return recetas ? JSON.parse(recetas) : [];\n  }\n\n\n}\n"],"mappings":";AAMA,OAAM,MAAOA,cAAc;EAH3BC,YAAA;IAIU,KAAAC,OAAO,GAAa,EAAE;IAE9B,KAAAC,aAAa,GAAgB,IAAI;;EAEjCC,aAAaA,CAACC,MAAc,EAAEC,UAAuB;IACnD,MAAMJ,OAAO,GAAG,IAAI,CAACK,cAAc,EAAE;IAErC,IAAID,UAAU,EAAE;MACd,MAAME,MAAM,GAAG,IAAIC,UAAU,EAAE;MAE/B;MACAD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAI;QACxB,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,EAAE;UACzB,MAAMC,YAAY,GAAGF,KAAK,CAACC,MAAM,CAACE,MAAgB;UAElD;UACAT,MAAM,CAACU,MAAM,GAAGF,YAAY;UAE5BX,OAAO,CAACc,IAAI,CAACX,MAAM,CAAC;UACpBY,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAClB,OAAO,CAAC,CAAC;;MAE5D,CAAC;MAED;MACAM,MAAM,CAACa,aAAa,CAACf,UAAU,CAAC;KACjC,MAAM;MACLJ,OAAO,CAACc,IAAI,CAACX,MAAM,CAAC;MACpBY,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAClB,OAAO,CAAC,CAAC;;EAE5D;EAEAK,cAAcA,CAAA;IACZ,MAAML,OAAO,GAAGe,YAAY,CAACK,OAAO,CAAC,SAAS,CAAC;IAC/C,OAAOpB,OAAO,GAAGiB,IAAI,CAACI,KAAK,CAACrB,OAAO,CAAC,GAAG,EAAE;EAC3C;EAAC,QAAAsB,CAAA,G;qBAnCUxB,cAAc;EAAA;EAAA,QAAAyB,EAAA,G;WAAdzB,cAAc;IAAA0B,OAAA,EAAd1B,cAAc,CAAA2B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}