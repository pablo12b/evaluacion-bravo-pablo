{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RecetasService {\n  constructor() {\n    this.recetas = [];\n    this.selectedImage = null;\n  }\n  agregarReceta(receta) {\n    const recetas = this.obtenerRecetas();\n    const reader = new FileReader();\n    // Agregar una verificación para asegurarse de que event y event.target no sean nulos\n    reader.onload = event => {\n      if (event && event.target) {\n        const imagenBase64 = event.target.result;\n        // Guardar la cadena de la imagen en la receta\n        receta.imagen = imagenBase64; // Ahora estamos guardando la cadena en la propiedad imagen\n        recetas.push(receta);\n        localStorage.setItem('recetas', JSON.stringify(recetas));\n      }\n    };\n  }\n  obtenerRecetas() {\n    const recetas = localStorage.getItem('recetas');\n    return recetas ? JSON.parse(recetas) : [];\n  }\n  borrarRecetas() {\n    localStorage.removeItem('recetas');\n  }\n  static #_ = this.ɵfac = function RecetasService_Factory(t) {\n    return new (t || RecetasService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecetasService,\n    factory: RecetasService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RecetasService","constructor","recetas","selectedImage","agregarReceta","receta","obtenerRecetas","reader","FileReader","onload","event","target","imagenBase64","result","imagen","push","localStorage","setItem","JSON","stringify","getItem","parse","borrarRecetas","removeItem","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\web\\Angular\\Practica\\src\\app\\recetas.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Receta } from 'src/app/pages/domain/receta';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecetasService {\n  private recetas: Receta[] = [];\n  \n  selectedImage: File | null = null;\n\n  agregarReceta(receta: Receta) {\n    const recetas = this.obtenerRecetas();\n      const reader = new FileReader();\n      // Agregar una verificación para asegurarse de que event y event.target no sean nulos\n      reader.onload = (event) => {\n        if (event && event.target) {\n          const imagenBase64 = event.target.result as string;\n          // Guardar la cadena de la imagen en la receta\n          receta.imagen = imagenBase64; // Ahora estamos guardando la cadena en la propiedad imagen\n          recetas.push(receta);\n          localStorage.setItem('recetas', JSON.stringify(recetas));\n        }\n      };\n  }\n\n  obtenerRecetas() {\n    const recetas = localStorage.getItem('recetas');\n    return recetas ? JSON.parse(recetas) : [];\n  }\n\n  borrarRecetas() {\n    localStorage.removeItem('recetas');\n  }\n\n}\n"],"mappings":";AAMA,OAAM,MAAOA,cAAc;EAH3BC,YAAA;IAIU,KAAAC,OAAO,GAAa,EAAE;IAE9B,KAAAC,aAAa,GAAgB,IAAI;;EAEjCC,aAAaA,CAACC,MAAc;IAC1B,MAAMH,OAAO,GAAG,IAAI,CAACI,cAAc,EAAE;IACnC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/B;IACAD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAI;MACxB,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,EAAE;QACzB,MAAMC,YAAY,GAAGF,KAAK,CAACC,MAAM,CAACE,MAAgB;QAClD;QACAR,MAAM,CAACS,MAAM,GAAGF,YAAY,CAAC,CAAC;QAC9BV,OAAO,CAACa,IAAI,CAACV,MAAM,CAAC;QACpBW,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACjB,OAAO,CAAC,CAAC;;IAE5D,CAAC;EACL;EAEAI,cAAcA,CAAA;IACZ,MAAMJ,OAAO,GAAGc,YAAY,CAACI,OAAO,CAAC,SAAS,CAAC;IAC/C,OAAOlB,OAAO,GAAGgB,IAAI,CAACG,KAAK,CAACnB,OAAO,CAAC,GAAG,EAAE;EAC3C;EAEAoB,aAAaA,CAAA;IACXN,YAAY,CAACO,UAAU,CAAC,SAAS,CAAC;EACpC;EAAC,QAAAC,CAAA,G;qBA3BUxB,cAAc;EAAA;EAAA,QAAAyB,EAAA,G;WAAdzB,cAAc;IAAA0B,OAAA,EAAd1B,cAAc,CAAA2B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}